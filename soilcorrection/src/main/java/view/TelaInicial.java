/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import converte.ConverteCMolcDm3EmMgDm3;
import converte.ConverteKgHaEmK2O;
import converte.ConverteKgHaEmP2O5;
import converte.ConverteMgDm3EmKgHa;
import correcao_fonte_nutrientes.NutrienteAdicional;
import correcao_fonte_nutrientes.fosforo.CorrecaoFosforo;
import correcao_fonte_nutrientes.fosforo.FonteFosforo;
import correcao_fonte_nutrientes.potassio.CorrecaoPotassio;
import correcao_fonte_nutrientes.potassio.FontePotassio;
import ctc.EquilibrioCorrecaoCTC;
import ctc.TexturaSolo;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Set;

/**
 *
 * @author gabri
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    
    DadosCorrecaoFosforo dadosFosforo = new DadosCorrecaoFosforo();
    DadosCorrecaoPotassio dadosPotassio = new DadosCorrecaoPotassio();
    
    public TelaInicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        jPanel = new javax.swing.JPanel();
        pnPainelTitulo = new javax.swing.JPanel();
        rtTitulo = new javax.swing.JLabel();
        pnPainelTexturaDoSolo = new javax.swing.JPanel();
        rtTexturaDoSolo = new javax.swing.JLabel();
        cbTexturaDoSolo = new javax.swing.JComboBox<>();
        btConsultarValoresIdeais = new javax.swing.JButton();
        pnPainelValores = new javax.swing.JPanel();
        rtFosforo = new javax.swing.JLabel();
        rtPotassio = new javax.swing.JLabel();
        rtCalcio = new javax.swing.JLabel();
        rtMagnesio = new javax.swing.JLabel();
        rtEnxofre = new javax.swing.JLabel();
        rtAluminio = new javax.swing.JLabel();
        rtHal = new javax.swing.JLabel();
        cxFosforoIdeal = new javax.swing.JTextField();
        cxPotassioIdeal = new javax.swing.JTextField();
        cxCalcioIdeal = new javax.swing.JTextField();
        cxMagnesioIdeal = new javax.swing.JTextField();
        cxEnxofreIdeal = new javax.swing.JTextField();
        cxAluminioIdeal = new javax.swing.JTextField();
        cxHalIdeal = new javax.swing.JTextField();
        rtIdeal = new javax.swing.JLabel();
        rtNoSolo = new javax.swing.JLabel();
        cxFosforoSolo = new javax.swing.JTextField();
        cxPotassioSolo = new javax.swing.JTextField();
        cxCalcioSolo = new javax.swing.JTextField();
        cxMagnesioSolo = new javax.swing.JTextField();
        cxEnxofreSolo = new javax.swing.JTextField();
        cxAluminioSolo = new javax.swing.JTextField();
        cxHalSolo = new javax.swing.JTextField();
        rtObservacao = new javax.swing.JLabel();
        pnPainelCorrecaoFosforo = new javax.swing.JPanel();
        rtCorrecaoFosforo = new javax.swing.JLabel();
        rtTeorFosforoAtingir = new javax.swing.JLabel();
        cxTeorFosforoAtingir = new javax.swing.JTextField();
        cxFonteFosforo = new javax.swing.JLabel();
        cbFonteFosforo = new javax.swing.JComboBox<>();
        rtValorFonteFosforo = new javax.swing.JLabel();
        cxValorFonteFosforo = new javax.swing.JTextField();
        rtEficienciaFosforo = new javax.swing.JLabel();
        cxEficienciaFosforo = new javax.swing.JTextField();
        rtRecomendacaoEficienciaFosforo = new javax.swing.JLabel();
        btEnviarCorrecaoFosforo = new javax.swing.JButton();
        pnPainelCorrecaoPotassio = new javax.swing.JPanel();
        rtCorrecaoPotassio = new javax.swing.JLabel();
        rtParticipacaoPotassioDesejada = new javax.swing.JLabel();
        cxParticipacaoPotassioDesejada = new javax.swing.JTextField();
        rtFontePotassio = new javax.swing.JLabel();
        cbFontePotassio = new javax.swing.JComboBox<>();
        rtValorFontePotassio = new javax.swing.JLabel();
        cxValorFontePotassio = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Soil Correction");
        setPreferredSize(new java.awt.Dimension(1024, 768));

        jScrollPane.setBorder(null);

        pnPainelTitulo.setPreferredSize(new java.awt.Dimension(1012, 120));

        rtTitulo.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        rtTitulo.setForeground(new java.awt.Color(0, 0, 0));
        rtTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtTitulo.setText("Soil Correction");

        javax.swing.GroupLayout pnPainelTituloLayout = new javax.swing.GroupLayout(pnPainelTitulo);
        pnPainelTitulo.setLayout(pnPainelTituloLayout);
        pnPainelTituloLayout.setHorizontalGroup(
            pnPainelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelTituloLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnPainelTituloLayout.setVerticalGroup(
            pnPainelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnPainelTexturaDoSolo.setPreferredSize(new java.awt.Dimension(1012, 94));

        rtTexturaDoSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtTexturaDoSolo.setForeground(new java.awt.Color(0, 0, 0));
        rtTexturaDoSolo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtTexturaDoSolo.setText("Textura do Solo: ");

        cbTexturaDoSolo.setBackground(new java.awt.Color(255, 255, 255));
        cbTexturaDoSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbTexturaDoSolo.setForeground(new java.awt.Color(0, 0, 0));
        cbTexturaDoSolo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solo Argiloso", "Solo Textura Média" }));

        btConsultarValoresIdeais.setBackground(new java.awt.Color(255, 255, 255));
        btConsultarValoresIdeais.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btConsultarValoresIdeais.setForeground(new java.awt.Color(0, 0, 0));
        btConsultarValoresIdeais.setText("Consultar");
        btConsultarValoresIdeais.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btConsultarValoresIdeais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarValoresIdeaisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPainelTexturaDoSoloLayout = new javax.swing.GroupLayout(pnPainelTexturaDoSolo);
        pnPainelTexturaDoSolo.setLayout(pnPainelTexturaDoSoloLayout);
        pnPainelTexturaDoSoloLayout.setHorizontalGroup(
            pnPainelTexturaDoSoloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelTexturaDoSoloLayout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(rtTexturaDoSolo)
                .addGap(50, 50, 50)
                .addComponent(cbTexturaDoSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150)
                .addComponent(btConsultarValoresIdeais, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(199, Short.MAX_VALUE))
        );
        pnPainelTexturaDoSoloLayout.setVerticalGroup(
            pnPainelTexturaDoSoloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelTexturaDoSoloLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnPainelTexturaDoSoloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtTexturaDoSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTexturaDoSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btConsultarValoresIdeais, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pnPainelValores.setPreferredSize(new java.awt.Dimension(944, 121));

        rtFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtFosforo.setForeground(new java.awt.Color(0, 0, 0));
        rtFosforo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtFosforo.setText("Fósforo (mg.dm³)");

        rtPotassio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtPotassio.setForeground(new java.awt.Color(0, 0, 0));
        rtPotassio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtPotassio.setText("Potássio (cmol)");

        rtCalcio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtCalcio.setForeground(new java.awt.Color(0, 0, 0));
        rtCalcio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtCalcio.setText("Cálcio (cmol)");

        rtMagnesio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtMagnesio.setForeground(new java.awt.Color(0, 0, 0));
        rtMagnesio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtMagnesio.setText("Magnésio (cmol)");

        rtEnxofre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtEnxofre.setForeground(new java.awt.Color(0, 0, 0));
        rtEnxofre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtEnxofre.setText("Enxofre (mg.dm³)");

        rtAluminio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtAluminio.setForeground(new java.awt.Color(0, 0, 0));
        rtAluminio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtAluminio.setText("Alumínio");

        rtHal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtHal.setForeground(new java.awt.Color(0, 0, 0));
        rtHal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtHal.setText("H + Al");

        cxFosforoIdeal.setEditable(false);
        cxFosforoIdeal.setBackground(new java.awt.Color(204, 204, 204));
        cxFosforoIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxFosforoIdeal.setForeground(new java.awt.Color(0, 0, 0));
        cxFosforoIdeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxPotassioIdeal.setEditable(false);
        cxPotassioIdeal.setBackground(new java.awt.Color(204, 204, 204));
        cxPotassioIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxPotassioIdeal.setForeground(new java.awt.Color(0, 0, 0));
        cxPotassioIdeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxCalcioIdeal.setEditable(false);
        cxCalcioIdeal.setBackground(new java.awt.Color(204, 204, 204));
        cxCalcioIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxCalcioIdeal.setForeground(new java.awt.Color(0, 0, 0));
        cxCalcioIdeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxMagnesioIdeal.setEditable(false);
        cxMagnesioIdeal.setBackground(new java.awt.Color(204, 204, 204));
        cxMagnesioIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxMagnesioIdeal.setForeground(new java.awt.Color(0, 0, 0));
        cxMagnesioIdeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxEnxofreIdeal.setEditable(false);
        cxEnxofreIdeal.setBackground(new java.awt.Color(204, 204, 204));
        cxEnxofreIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxEnxofreIdeal.setForeground(new java.awt.Color(0, 0, 0));
        cxEnxofreIdeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxAluminioIdeal.setEditable(false);
        cxAluminioIdeal.setBackground(new java.awt.Color(204, 204, 204));
        cxAluminioIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxAluminioIdeal.setForeground(new java.awt.Color(0, 0, 0));
        cxAluminioIdeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxHalIdeal.setEditable(false);
        cxHalIdeal.setBackground(new java.awt.Color(204, 204, 204));
        cxHalIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxHalIdeal.setForeground(new java.awt.Color(0, 0, 0));
        cxHalIdeal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        rtIdeal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtIdeal.setForeground(new java.awt.Color(0, 0, 0));
        rtIdeal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtIdeal.setText("Ideal:");

        rtNoSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtNoSolo.setForeground(new java.awt.Color(0, 0, 0));
        rtNoSolo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtNoSolo.setText("No Solo:");

        cxFosforoSolo.setBackground(new java.awt.Color(255, 255, 255));
        cxFosforoSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxFosforoSolo.setForeground(new java.awt.Color(0, 0, 0));
        cxFosforoSolo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxPotassioSolo.setBackground(new java.awt.Color(255, 255, 255));
        cxPotassioSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxPotassioSolo.setForeground(new java.awt.Color(0, 0, 0));
        cxPotassioSolo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxCalcioSolo.setBackground(new java.awt.Color(255, 255, 255));
        cxCalcioSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxCalcioSolo.setForeground(new java.awt.Color(0, 0, 0));
        cxCalcioSolo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxMagnesioSolo.setBackground(new java.awt.Color(255, 255, 255));
        cxMagnesioSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxMagnesioSolo.setForeground(new java.awt.Color(0, 0, 0));
        cxMagnesioSolo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxEnxofreSolo.setBackground(new java.awt.Color(255, 255, 255));
        cxEnxofreSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxEnxofreSolo.setForeground(new java.awt.Color(0, 0, 0));
        cxEnxofreSolo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxAluminioSolo.setBackground(new java.awt.Color(255, 255, 255));
        cxAluminioSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxAluminioSolo.setForeground(new java.awt.Color(0, 0, 0));
        cxAluminioSolo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxHalSolo.setBackground(new java.awt.Color(255, 255, 255));
        cxHalSolo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxHalSolo.setForeground(new java.awt.Color(0, 0, 0));
        cxHalSolo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        rtObservacao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtObservacao.setForeground(new java.awt.Color(0, 0, 0));
        rtObservacao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtObservacao.setText("Obs: Não deixe de preencher os valores presentes no solo! Eles são necessários para calcular a correção.");

        javax.swing.GroupLayout pnPainelValoresLayout = new javax.swing.GroupLayout(pnPainelValores);
        pnPainelValores.setLayout(pnPainelValoresLayout);
        pnPainelValoresLayout.setHorizontalGroup(
            pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelValoresLayout.createSequentialGroup()
                .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPainelValoresLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rtIdeal)
                            .addComponent(rtNoSolo))
                        .addGap(28, 28, 28)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cxFosforoIdeal)
                            .addComponent(rtFosforo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxFosforoSolo))
                        .addGap(42, 42, 42)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rtPotassio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxPotassioIdeal)
                            .addComponent(cxPotassioSolo))
                        .addGap(42, 42, 42)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rtCalcio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxCalcioIdeal)
                            .addComponent(cxCalcioSolo))
                        .addGap(42, 42, 42)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rtMagnesio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxMagnesioIdeal)
                            .addComponent(cxMagnesioSolo))
                        .addGap(42, 42, 42)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rtEnxofre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxEnxofreIdeal)
                            .addComponent(cxEnxofreSolo))
                        .addGap(42, 42, 42)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rtAluminio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxAluminioIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(cxAluminioSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rtHal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cxHalIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(cxHalSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                    .addGroup(pnPainelValoresLayout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(rtObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        pnPainelValoresLayout.setVerticalGroup(
            pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelValoresLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtFosforo)
                    .addComponent(rtPotassio)
                    .addComponent(rtCalcio)
                    .addComponent(rtMagnesio)
                    .addComponent(rtEnxofre)
                    .addComponent(rtAluminio)
                    .addComponent(rtHal))
                .addGap(18, 18, 18)
                .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cxFosforoIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxPotassioIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxCalcioIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxMagnesioIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxEnxofreIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxAluminioIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxHalIdeal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtIdeal))
                .addGap(18, 18, 18)
                .addGroup(pnPainelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cxFosforoSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtNoSolo)
                    .addComponent(cxPotassioSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxCalcioSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxMagnesioSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxEnxofreSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxAluminioSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cxHalSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(rtObservacao)
                .addGap(25, 25, 25))
        );

        rtCorrecaoFosforo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        rtCorrecaoFosforo.setForeground(new java.awt.Color(0, 0, 0));
        rtCorrecaoFosforo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtCorrecaoFosforo.setText("Correção de Fósforo");

        rtTeorFosforoAtingir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtTeorFosforoAtingir.setForeground(new java.awt.Color(0, 0, 0));
        rtTeorFosforoAtingir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtTeorFosforoAtingir.setText("Teor de Fósforo a atingir: (mg.dm³)");

        cxTeorFosforoAtingir.setBackground(new java.awt.Color(255, 255, 255));
        cxTeorFosforoAtingir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxTeorFosforoAtingir.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cxFonteFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxFonteFosforo.setForeground(new java.awt.Color(0, 0, 0));
        cxFonteFosforo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cxFonteFosforo.setText("Fonte de Fósforo a utilizar: ");

        cbFonteFosforo.setBackground(new java.awt.Color(255, 255, 255));
        cbFonteFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbFonteFosforo.setForeground(new java.awt.Color(0, 0, 0));
        cbFonteFosforo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Superfosfato Simples", "Superfosfato Triplo", "MAP" }));
        cbFonteFosforo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rtValorFonteFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtValorFonteFosforo.setForeground(new java.awt.Color(0, 0, 0));
        rtValorFonteFosforo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtValorFonteFosforo.setText("Valor/Ton. (R$)");

        cxValorFonteFosforo.setBackground(new java.awt.Color(255, 255, 255));
        cxValorFonteFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxValorFonteFosforo.setForeground(new java.awt.Color(0, 0, 0));
        cxValorFonteFosforo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        rtEficienciaFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtEficienciaFosforo.setForeground(new java.awt.Color(0, 0, 0));
        rtEficienciaFosforo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtEficienciaFosforo.setText("Eficiência do Fósforo % : ");

        cxEficienciaFosforo.setBackground(new java.awt.Color(255, 255, 255));
        cxEficienciaFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxEficienciaFosforo.setForeground(new java.awt.Color(0, 0, 0));
        cxEficienciaFosforo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        rtRecomendacaoEficienciaFosforo.setForeground(new java.awt.Color(0, 0, 0));
        rtRecomendacaoEficienciaFosforo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtRecomendacaoEficienciaFosforo.setText("(É recomendado uma eficiência entre 70% e 90%)");

        btEnviarCorrecaoFosforo.setBackground(new java.awt.Color(255, 255, 255));
        btEnviarCorrecaoFosforo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btEnviarCorrecaoFosforo.setForeground(new java.awt.Color(0, 0, 0));
        btEnviarCorrecaoFosforo.setText("Enviar correção fósforo");
        btEnviarCorrecaoFosforo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btEnviarCorrecaoFosforo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarCorrecaoFosforoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPainelCorrecaoFosforoLayout = new javax.swing.GroupLayout(pnPainelCorrecaoFosforo);
        pnPainelCorrecaoFosforo.setLayout(pnPainelCorrecaoFosforoLayout);
        pnPainelCorrecaoFosforoLayout.setHorizontalGroup(
            pnPainelCorrecaoFosforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelCorrecaoFosforoLayout.createSequentialGroup()
                .addGroup(pnPainelCorrecaoFosforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rtCorrecaoFosforo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnPainelCorrecaoFosforoLayout.createSequentialGroup()
                        .addGroup(pnPainelCorrecaoFosforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnPainelCorrecaoFosforoLayout.createSequentialGroup()
                                .addGap(304, 304, 304)
                                .addComponent(rtTeorFosforoAtingir)
                                .addGap(50, 50, 50)
                                .addComponent(cxTeorFosforoAtingir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnPainelCorrecaoFosforoLayout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(cxFonteFosforo)
                                .addGap(42, 42, 42)
                                .addComponent(cbFonteFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(rtValorFonteFosforo)
                                .addGap(42, 42, 42)
                                .addComponent(cxValorFonteFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(150, 150, 150))
                    .addGroup(pnPainelCorrecaoFosforoLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(rtEficienciaFosforo)
                        .addGap(50, 50, 50)
                        .addComponent(cxEficienciaFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(rtRecomendacaoEficienciaFosforo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPainelCorrecaoFosforoLayout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(btEnviarCorrecaoFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(410, 410, 410))
        );
        pnPainelCorrecaoFosforoLayout.setVerticalGroup(
            pnPainelCorrecaoFosforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelCorrecaoFosforoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rtCorrecaoFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnPainelCorrecaoFosforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtTeorFosforoAtingir)
                    .addComponent(cxTeorFosforoAtingir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnPainelCorrecaoFosforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cxFonteFosforo)
                    .addComponent(cbFonteFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtValorFonteFosforo)
                    .addComponent(cxValorFonteFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnPainelCorrecaoFosforoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtEficienciaFosforo)
                    .addComponent(cxEficienciaFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtRecomendacaoEficienciaFosforo))
                .addGap(18, 18, 18)
                .addComponent(btEnviarCorrecaoFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        rtCorrecaoPotassio.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        rtCorrecaoPotassio.setForeground(new java.awt.Color(0, 0, 0));
        rtCorrecaoPotassio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtCorrecaoPotassio.setText("Correção Potássio");

        rtParticipacaoPotassioDesejada.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtParticipacaoPotassioDesejada.setForeground(new java.awt.Color(0, 0, 0));
        rtParticipacaoPotassioDesejada.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtParticipacaoPotassioDesejada.setText("Participação do Potássio na CTC, desejada: %");

        cxParticipacaoPotassioDesejada.setBackground(new java.awt.Color(255, 255, 255));
        cxParticipacaoPotassioDesejada.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxParticipacaoPotassioDesejada.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        rtFontePotassio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtFontePotassio.setForeground(new java.awt.Color(0, 0, 0));
        rtFontePotassio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtFontePotassio.setText("Fonte de Potássio a usar: ");

        cbFontePotassio.setBackground(new java.awt.Color(255, 255, 255));
        cbFontePotassio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbFontePotassio.setForeground(new java.awt.Color(0, 0, 0));
        cbFontePotassio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cloreto de Potássio", "Sulfato de Potássio", "Sulfato Potássio/Magnésio" }));
        cbFontePotassio.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        rtValorFontePotassio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rtValorFontePotassio.setForeground(new java.awt.Color(0, 0, 0));
        rtValorFontePotassio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rtValorFontePotassio.setText("Valor/ton. (R$)");

        cxValorFontePotassio.setBackground(new java.awt.Color(255, 255, 255));
        cxValorFontePotassio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cxValorFontePotassio.setForeground(new java.awt.Color(0, 0, 0));
        cxValorFontePotassio.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Enviar correção potássio");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnPainelCorrecaoPotassioLayout = new javax.swing.GroupLayout(pnPainelCorrecaoPotassio);
        pnPainelCorrecaoPotassio.setLayout(pnPainelCorrecaoPotassioLayout);
        pnPainelCorrecaoPotassioLayout.setHorizontalGroup(
            pnPainelCorrecaoPotassioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelCorrecaoPotassioLayout.createSequentialGroup()
                .addComponent(rtCorrecaoPotassio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnPainelCorrecaoPotassioLayout.createSequentialGroup()
                .addGroup(pnPainelCorrecaoPotassioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnPainelCorrecaoPotassioLayout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(rtParticipacaoPotassioDesejada)
                        .addGap(50, 50, 50)
                        .addComponent(cxParticipacaoPotassioDesejada, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnPainelCorrecaoPotassioLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(rtFontePotassio)
                        .addGap(42, 42, 42)
                        .addComponent(cbFontePotassio, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(rtValorFontePotassio)
                        .addGap(42, 42, 42)
                        .addComponent(cxValorFontePotassio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPainelCorrecaoPotassioLayout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(410, 410, 410))
        );
        pnPainelCorrecaoPotassioLayout.setVerticalGroup(
            pnPainelCorrecaoPotassioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnPainelCorrecaoPotassioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rtCorrecaoPotassio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnPainelCorrecaoPotassioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtParticipacaoPotassioDesejada)
                    .addComponent(cxParticipacaoPotassioDesejada, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnPainelCorrecaoPotassioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rtFontePotassio)
                    .addComponent(cbFontePotassio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rtValorFontePotassio)
                    .addComponent(cxValorFontePotassio, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnPainelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 1026, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnPainelTexturaDoSolo, javax.swing.GroupLayout.PREFERRED_SIZE, 1026, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnPainelValores, javax.swing.GroupLayout.PREFERRED_SIZE, 1014, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pnPainelCorrecaoPotassio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnPainelCorrecaoFosforo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(155, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addComponent(pnPainelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnPainelTexturaDoSolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPainelValores, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnPainelCorrecaoFosforo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnPainelCorrecaoPotassio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );

        jScrollPane.setViewportView(jPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 2048, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btConsultarValoresIdeaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarValoresIdeaisActionPerformed
        consultar();
    }//GEN-LAST:event_btConsultarValoresIdeaisActionPerformed

    private void btEnviarCorrecaoFosforoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarCorrecaoFosforoActionPerformed
        enviarCorrecaoFosforo();
    }//GEN-LAST:event_btEnviarCorrecaoFosforoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        enviarCorrecaoPotassio();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConsultarValoresIdeais;
    private javax.swing.JButton btEnviarCorrecaoFosforo;
    private javax.swing.JComboBox<String> cbFonteFosforo;
    private javax.swing.JComboBox<String> cbFontePotassio;
    private javax.swing.JComboBox<String> cbTexturaDoSolo;
    private javax.swing.JTextField cxAluminioIdeal;
    private javax.swing.JTextField cxAluminioSolo;
    private javax.swing.JTextField cxCalcioIdeal;
    private javax.swing.JTextField cxCalcioSolo;
    private javax.swing.JTextField cxEficienciaFosforo;
    private javax.swing.JTextField cxEnxofreIdeal;
    private javax.swing.JTextField cxEnxofreSolo;
    private javax.swing.JLabel cxFonteFosforo;
    private javax.swing.JTextField cxFosforoIdeal;
    private javax.swing.JTextField cxFosforoSolo;
    private javax.swing.JTextField cxHalIdeal;
    private javax.swing.JTextField cxHalSolo;
    private javax.swing.JTextField cxMagnesioIdeal;
    private javax.swing.JTextField cxMagnesioSolo;
    private javax.swing.JTextField cxParticipacaoPotassioDesejada;
    private javax.swing.JTextField cxPotassioIdeal;
    private javax.swing.JTextField cxPotassioSolo;
    private javax.swing.JTextField cxTeorFosforoAtingir;
    private javax.swing.JTextField cxValorFonteFosforo;
    private javax.swing.JTextField cxValorFontePotassio;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JPanel pnPainelCorrecaoFosforo;
    private javax.swing.JPanel pnPainelCorrecaoPotassio;
    private javax.swing.JPanel pnPainelTexturaDoSolo;
    private javax.swing.JPanel pnPainelTitulo;
    private javax.swing.JPanel pnPainelValores;
    private javax.swing.JLabel rtAluminio;
    private javax.swing.JLabel rtCalcio;
    private javax.swing.JLabel rtCorrecaoFosforo;
    private javax.swing.JLabel rtCorrecaoPotassio;
    private javax.swing.JLabel rtEficienciaFosforo;
    private javax.swing.JLabel rtEnxofre;
    private javax.swing.JLabel rtFontePotassio;
    private javax.swing.JLabel rtFosforo;
    private javax.swing.JLabel rtHal;
    private javax.swing.JLabel rtIdeal;
    private javax.swing.JLabel rtMagnesio;
    private javax.swing.JLabel rtNoSolo;
    private javax.swing.JLabel rtObservacao;
    private javax.swing.JLabel rtParticipacaoPotassioDesejada;
    private javax.swing.JLabel rtPotassio;
    private javax.swing.JLabel rtRecomendacaoEficienciaFosforo;
    private javax.swing.JLabel rtTeorFosforoAtingir;
    private javax.swing.JLabel rtTexturaDoSolo;
    private javax.swing.JLabel rtTitulo;
    private javax.swing.JLabel rtValorFonteFosforo;
    private javax.swing.JLabel rtValorFontePotassio;
    // End of variables declaration//GEN-END:variables
    public void consultar(){
        String tipoSolo = cbTexturaDoSolo.getSelectedItem().toString();
        switch(tipoSolo){
            case "Solo Argiloso":
                cxFosforoIdeal.setText(Double.toString(TexturaSolo.ARGILOSO.calculaValorIdeal().fosforo()));
                cxPotassioIdeal.setText(Double.toString(TexturaSolo.ARGILOSO.calculaValorIdeal().potassio()));
                cxCalcioIdeal.setText(Double.toString(TexturaSolo.ARGILOSO.calculaValorIdeal().calcio()));
                cxMagnesioIdeal.setText(Double.toString(TexturaSolo.ARGILOSO.calculaValorIdeal().magnesio()));
                cxEnxofreIdeal.setText(Double.toString(TexturaSolo.ARGILOSO.calculaValorIdeal().enxofre()));
                cxAluminioIdeal.setText(Double.toString(TexturaSolo.ARGILOSO.calculaValorIdeal().aluminio()));
                cxHalIdeal.setText(Double.toString(TexturaSolo.ARGILOSO.calculaValorIdeal().aluminioHidrogenio()));
                break;
            case "Solo Textura Média":
                cxFosforoIdeal.setText(Double.toString(TexturaSolo.TEXTURA_MEDIA.calculaValorIdeal().fosforo()));
                cxPotassioIdeal.setText(Double.toString(TexturaSolo.TEXTURA_MEDIA.calculaValorIdeal().potassio()));
                cxCalcioIdeal.setText(Double.toString(TexturaSolo.TEXTURA_MEDIA.calculaValorIdeal().calcio()));
                cxMagnesioIdeal.setText(Double.toString(TexturaSolo.TEXTURA_MEDIA.calculaValorIdeal().magnesio()));
                cxEnxofreIdeal.setText(Double.toString(TexturaSolo.TEXTURA_MEDIA.calculaValorIdeal().enxofre()));
                cxAluminioIdeal.setText(Double.toString(TexturaSolo.TEXTURA_MEDIA.calculaValorIdeal().aluminio()));
                cxHalIdeal.setText(Double.toString(TexturaSolo.TEXTURA_MEDIA.calculaValorIdeal().aluminioHidrogenio()));
                break;
            default:
                break;
        }
    }

    private void enviarCorrecaoFosforo() {
        dadosFosforo.setSolo(Double.parseDouble(cxFosforoSolo.getText().replace(",", ".")));
        dadosFosforo.setAtingir(Double.parseDouble(cxTeorFosforoAtingir.getText().replace(",", ".")));
        dadosFosforo.setFonte(cbFonteFosforo.getSelectedItem().toString());
        dadosFosforo.setValor(Double.parseDouble(cxValorFonteFosforo.getText().replace(",", ".")));
        dadosFosforo.setEficiencia(Double.parseDouble(cxEficienciaFosforo.getText().replace(",", ".")));
        
        double necessarioMgDm3 = Double.parseDouble(cxTeorFosforoAtingir.getText().replace(",", ".")) - 
                                 Double.parseDouble(cxFosforoSolo.getText().replace(",", "."));
        double necessarioKgHa = new ConverteMgDm3EmKgHa().converte(necessarioMgDm3);
        double necessarioP2O5 = new ConverteKgHaEmP2O5().converte(necessarioKgHa);
        
        double necessidadeFosforo = new CorrecaoFosforo().calculaEficienciaNutriente(
                necessarioP2O5,
                (Double.parseDouble(cxEficienciaFosforo.getText().replace(",", ".")))/100);
        
        double qtdAplicar;
        double custo;
        Set<NutrienteAdicional> nutrientesAdicionais;
        String nomeNutrienteAdicional1;
        double valorCorrecaoAdicional1;
        String nomeNutrienteAdicional2;
        double valorCorrecaoAdicional2;
        switch (cbFonteFosforo.getSelectedItem().toString()){
            case "Superfosfato Simples":
                qtdAplicar = new CorrecaoFosforo().calculaQuantidadeAplicar(
                        necessidadeFosforo, 
                        FonteFosforo.SUPERFOSFATO_SIMPLES);
                BigDecimal bd1 = new BigDecimal(qtdAplicar).setScale(2, RoundingMode.HALF_EVEN);
                dadosFosforo.setQtdAplicar(bd1.doubleValue());
                
                custo = new CorrecaoFosforo().calculaCusto(Double.parseDouble(cxValorFonteFosforo.getText().replace(",", ".")), qtdAplicar);
                BigDecimal bd2 = new BigDecimal(custo).setScale(2, RoundingMode.HALF_EVEN);
                dadosFosforo.setCusto(bd2.doubleValue());
                
                nutrientesAdicionais = new CorrecaoFosforo()
                                                                .getNutrientesAdicionais(
                                                                        qtdAplicar, 
                                                                        FonteFosforo.SUPERFOSFATO_SIMPLES);
                
                nomeNutrienteAdicional1 = nutrientesAdicionais.stream().skip(0).findFirst().get().getNome().toString();
                valorCorrecaoAdicional1 = nutrientesAdicionais.stream().skip(0).findFirst().get().getCorrecaoAdicional();
                BigDecimal bd3 = new BigDecimal(valorCorrecaoAdicional1).setScale(1, RoundingMode.HALF_EVEN);
                nomeNutrienteAdicional2 = nutrientesAdicionais.stream().skip(1).findFirst().get().getNome().toString();
                valorCorrecaoAdicional2 = nutrientesAdicionais.stream().skip(1).findFirst().get().getCorrecaoAdicional();
                BigDecimal bd4 = new BigDecimal(valorCorrecaoAdicional2).setScale(1, RoundingMode.HALF_EVEN);
                dadosFosforo.setNomeAdicional(nomeNutrienteAdicional1);
                dadosFosforo.setValorCorrecao(bd3.doubleValue());
                dadosFosforo.setNomeAdicional2(nomeNutrienteAdicional2);
                dadosFosforo.setValorCorrecao2(bd4.doubleValue());
                
                break;
            case "Superfosfato Triplo":
                qtdAplicar = new CorrecaoFosforo().calculaQuantidadeAplicar(
                        necessidadeFosforo, 
                        FonteFosforo.SUPERFOSFATO_TRIPO);
                BigDecimal bd5 = new BigDecimal(qtdAplicar).setScale(2, RoundingMode.HALF_EVEN);
                dadosFosforo.setQtdAplicar(bd5.doubleValue());
                
                custo = new CorrecaoFosforo().calculaCusto(Double.parseDouble(cxValorFonteFosforo.getText().replace(",", ".")), qtdAplicar);
                BigDecimal bd6 = new BigDecimal(custo).setScale(2, RoundingMode.HALF_EVEN);
                dadosFosforo.setCusto(bd6.doubleValue());
                
                nutrientesAdicionais = new CorrecaoFosforo()
                                                                .getNutrientesAdicionais(
                                                                        qtdAplicar, 
                                                                        FonteFosforo.SUPERFOSFATO_TRIPO);
                
                nomeNutrienteAdicional1 = nutrientesAdicionais.stream().findFirst().get().getNome().toString();
                valorCorrecaoAdicional1 = nutrientesAdicionais.stream().findFirst().get().getCorrecaoAdicional();
                BigDecimal bd7 = new BigDecimal(valorCorrecaoAdicional1).setScale(1, RoundingMode.HALF_EVEN);
                dadosFosforo.setNomeAdicional(nomeNutrienteAdicional1);
                dadosFosforo.setValorCorrecao(bd7.doubleValue());
                dadosFosforo.setNomeAdicional2("");
                dadosFosforo.setValorCorrecao2(0);
                
                break;
            case "MAP":
                qtdAplicar = new CorrecaoFosforo().calculaQuantidadeAplicar(
                        necessidadeFosforo, 
                        FonteFosforo.MAP);
                BigDecimal bd8 = new BigDecimal(qtdAplicar).setScale(2, RoundingMode.HALF_EVEN);
                dadosFosforo.setQtdAplicar(bd8.doubleValue());
                
                custo = new CorrecaoFosforo().calculaCusto(Double.parseDouble(cxValorFonteFosforo.getText().replace(",", ".")), qtdAplicar);
                BigDecimal bd9 = new BigDecimal(custo).setScale(2, RoundingMode.HALF_EVEN);
                dadosFosforo.setCusto(bd9.doubleValue());
                
                nutrientesAdicionais = new CorrecaoFosforo()
                                                                .getNutrientesAdicionais(
                                                                        qtdAplicar, 
                                                                        FonteFosforo.MAP);
                
                nomeNutrienteAdicional1 = nutrientesAdicionais.stream().findFirst().get().getNome().toString();
                valorCorrecaoAdicional1 = nutrientesAdicionais.stream().findFirst().get().getCorrecaoAdicional();
                BigDecimal bd10 = new BigDecimal(valorCorrecaoAdicional1).setScale(1, RoundingMode.HALF_EVEN);
                dadosFosforo.setNomeAdicional(nomeNutrienteAdicional1);
                dadosFosforo.setValorCorrecao(bd10.doubleValue());
                dadosFosforo.setNomeAdicional2("");
                dadosFosforo.setValorCorrecao2(0);
                
                break;
            default:
                qtdAplicar = 0;
                custo = 0;
                break;
        }
        
        TelaCorrecaoFosforo cf = new TelaCorrecaoFosforo();
        cf.setVisible(true);
        cf.mostrarCorrecaoFosforo(dadosFosforo);
    }

    private void enviarCorrecaoPotassio() {
        dadosPotassio.setDesejada(Double.parseDouble(cxParticipacaoPotassioDesejada.getText().replace(",", ".")));
        dadosPotassio.setFonte(cbFontePotassio.getSelectedItem().toString());
        dadosPotassio.setValor(Double.parseDouble(cxValorFontePotassio.getText().replace(",", ".")));
        
        double presenteCTC = (Double.parseDouble(cxPotassioSolo.getText().replace(",", "."))/
                                new EquilibrioCorrecaoCTC().calculaCTCCmol(
                                    Double.parseDouble(cxPotassioSolo.getText().replace(",", ".")), 
                                    Double.parseDouble(cxCalcioSolo.getText().replace(",", ".")), 
                                    Double.parseDouble(cxMagnesioSolo.getText().replace(",", ".")), 
                                    Double.parseDouble(cxHalSolo.getText().replace(",", ".")))) * 100;

        BigDecimal bd = new BigDecimal(presenteCTC).setScale(3, RoundingMode.HALF_EVEN);
        presenteCTC = bd.doubleValue();
        
        BigDecimal bd1 = new BigDecimal(presenteCTC).setScale(1, RoundingMode.HALF_EVEN);
        dadosPotassio.setAtual(bd1.doubleValue());
        
        double necessidadeCorrecao = new CorrecaoPotassio()
                                    .calculaNecessidadeAdicionarCMolcDm3(
                                        Double.parseDouble(cxPotassioSolo.getText().replace(",", ".")), 
                                        presenteCTC/100, 
                                        Double.parseDouble(cxParticipacaoPotassioDesejada.getText().replace(",", "."))/100);
        dadosPotassio.setNecessidadeCorrecao(necessidadeCorrecao);
        if(necessidadeCorrecao>0){
            double necessidadeMgDm3 = new ConverteCMolcDm3EmMgDm3().converte(necessidadeCorrecao);
            double necessidadeKgHa = new ConverteMgDm3EmKgHa().converte(necessidadeMgDm3);
            double necessidadeK2O = new ConverteKgHaEmK2O().converte(necessidadeKgHa);
            double eficiencia = new CorrecaoPotassio().calculaEficienciaNutriente(necessidadeK2O, 0.85);
            String fonte = cbFontePotassio.getSelectedItem().toString();
            double qtdAplicar;
            double custo;
            Set<NutrienteAdicional> nutrientesAdicionais;
            String nomeNutrienteAdicional1;
            double valorCorrecaoAdicional1;
            String nomeNutrienteAdicional2;
            double valorCorrecaoAdicional2;
            switch(fonte){
                case "Cloreto de Potássio":
                    qtdAplicar = new CorrecaoPotassio().calculaQuantidadeAplicar(eficiencia, FontePotassio.CLORETO_POTASSIO);
                    BigDecimal bd3 = new BigDecimal(qtdAplicar).setScale(2, RoundingMode.HALF_EVEN);
                    dadosPotassio.setQtdAplicar(bd3.doubleValue());
                    
                    custo = new CorrecaoPotassio().calculaCusto(Double.parseDouble(cxValorFontePotassio.getText().replace(",", ".")), qtdAplicar);
                    BigDecimal bd4 = new BigDecimal(custo).setScale(2, RoundingMode.HALF_EVEN);
                    dadosPotassio.setCusto(bd4.doubleValue());
                    
                    dadosPotassio.setNomeAdicional("");
                    dadosPotassio.setNomeAdicional2("");
                    dadosPotassio.setValorAdicional(0);
                    dadosPotassio.setValorAdicional2(0);
                    
                    break;
                case "Sulfato de Potássio":
                    qtdAplicar = new CorrecaoPotassio().calculaQuantidadeAplicar(eficiencia, FontePotassio.SULFATO_POTASSIO);
                    BigDecimal bd5 = new BigDecimal(qtdAplicar).setScale(2, RoundingMode.HALF_EVEN);
                    dadosPotassio.setQtdAplicar(bd5.doubleValue());
                    
                    custo = new CorrecaoPotassio().calculaCusto(Double.parseDouble(cxValorFontePotassio.getText().replace(",", ".")), qtdAplicar);
                    BigDecimal bd6 = new BigDecimal(custo).setScale(2, RoundingMode.HALF_EVEN);
                    dadosPotassio.setCusto(bd6.doubleValue());
                    
                    nutrientesAdicionais = new CorrecaoPotassio()
                                            .getNutrientesAdicionais(qtdAplicar, FontePotassio.SULFATO_POTASSIO);
                    
                    nomeNutrienteAdicional1 = nutrientesAdicionais.stream().findFirst().get().getNome().toString();
                    valorCorrecaoAdicional1 = nutrientesAdicionais.stream().findFirst().get().getCorrecaoAdicional();
                    BigDecimal bd7 = new BigDecimal(valorCorrecaoAdicional1).setScale(1, RoundingMode.HALF_EVEN);
                    dadosPotassio.setNomeAdicional(nomeNutrienteAdicional1);
                    dadosPotassio.setValorAdicional(bd7.doubleValue());
                    dadosPotassio.setNomeAdicional2("");
                    dadosPotassio.setValorAdicional2(0);

                    break;
                case "Sulfato Potássio/Magnésio":
                    qtdAplicar = new CorrecaoPotassio().calculaQuantidadeAplicar(eficiencia, FontePotassio.SULFATO_POTASSIO_MAGNESIO);
                    BigDecimal bd8 = new BigDecimal(qtdAplicar).setScale(2, RoundingMode.HALF_EVEN);
                    dadosPotassio.setQtdAplicar(bd8.doubleValue());
                    
                    custo = new CorrecaoPotassio().calculaCusto(Double.parseDouble(cxValorFontePotassio.getText().replace(",", ".")), qtdAplicar);
                    BigDecimal bd9 = new BigDecimal(custo).setScale(2, RoundingMode.HALF_EVEN);
                    dadosPotassio.setCusto(bd9.doubleValue());
                    
                    nutrientesAdicionais = new CorrecaoPotassio()
                                            .getNutrientesAdicionais(qtdAplicar, FontePotassio.SULFATO_POTASSIO_MAGNESIO);
                    
                    nomeNutrienteAdicional1 = nutrientesAdicionais.stream().skip(0).findFirst().get().getNome().toString();
                    valorCorrecaoAdicional1 = nutrientesAdicionais.stream().skip(0).findFirst().get().getCorrecaoAdicional();
                    BigDecimal bd10 = new BigDecimal(valorCorrecaoAdicional1).setScale(1, RoundingMode.HALF_EVEN);
                    nomeNutrienteAdicional2 = nutrientesAdicionais.stream().skip(1).findFirst().get().getNome().toString();
                    valorCorrecaoAdicional2 = nutrientesAdicionais.stream().skip(1).findFirst().get().getCorrecaoAdicional();
                    BigDecimal bd11 = new BigDecimal(valorCorrecaoAdicional2).setScale(1, RoundingMode.HALF_EVEN);
                    dadosPotassio.setNomeAdicional(nomeNutrienteAdicional1);
                    dadosPotassio.setValorAdicional(bd10.doubleValue());
                    dadosPotassio.setNomeAdicional2(nomeNutrienteAdicional2);
                    dadosPotassio.setValorAdicional2(bd11.doubleValue());
                    
                    break;
                default:
                    qtdAplicar = 0;
                    custo = 0;
                    break;
            }   
        }
        
        TelaCorrecaoPotassio cp = new TelaCorrecaoPotassio();
        cp.setVisible(true);
        cp.mostrarCorrecaoPotassio(dadosPotassio);
    }

}
